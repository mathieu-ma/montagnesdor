<?xml version="1.0" encoding="UTF-8"?>
<project name="security" basedir="." default="05-convert-pkcs12-keystore-to-jks-keystore">
	<description>
		This ant build file is only used for running ANT into eclipse
		without the need of command line
    </description>

	<property name="p-target-company" value="${target-company}" />

	<property name="p-alias" value="${p-target-company}alias" />
	<property name="p-security-tools-folder" value="./security-tools" />
	<property name="p-openssl.exe" value="${p-security-tools-folder}/openssl.exe" />

	<property name="p-openSSLConf" value="./openssl-noprompt.cnf" />
	<property name="p-passwordsFileKeystorePKCS12" value="./keystore-pkcs12.pass" />

	<property name="p-security-generated-files-folder" value="./generated" />
	<property name="p-privateKeyRSA" value="${p-security-generated-files-folder}/${p-target-company}-private-key.pem" />
	<property name="p-certificateRequest" value="${p-security-generated-files-folder}/cert.csr" />
	<property name="p-selfSignedCertificate" value="${p-security-generated-files-folder}/${p-target-company}-cacert.pem" />
	<property name="p-keystoreJKS" value="${p-security-generated-files-folder}/${p-target-company}-keystore" />
	<property name="p-keystorePKCS12" value="${p-security-generated-files-folder}/${p-target-company}-keystore.pkcs12" />

	<target name="01-initialize-security-resources">
		<echo>
			Remove all files in ${p-security-generated-files-folder}
		</echo>
		<delete verbose="true" failonerror="no">
			<fileset dir="${p-security-generated-files-folder}" />
		</delete>
	</target>

	<target name="02-generate-new-rsa-key" depends="01-initialize-security-resources">
		<echo>
			${p-openssl.exe} genrsa -out
			${p-privateKeyRSA} 2048
		</echo>
		<exec executable="${p-openssl.exe}">
			<arg line="genrsa -out ${p-privateKeyRSA} 1024" />
		</exec>
	</target>

	<target name="03-create-self-signed-test-certificate" depends="02-generate-new-rsa-key">
		<description>
			Creating a self-signed test certificate.
			This file
			can be used with the file mdo-private-key.pem for Tomcat APR in
			production environments
			(The Apache Tomcat Native library which
			allows optimal performance in production environments was not
			found on the java.library.path)
		</description>
		<echo>
			${p-openssl.exe} req -config
			${p-openSSLConf} -new -x509 -key
			${p-privateKeyRSA} -out
			${p-selfSignedCertificate} -days 1095
		</echo>
		<exec executable="${p-openssl.exe}">
			<arg line="req -config ${p-openSSLConf} -new -x509 -key ${p-privateKeyRSA} -out ${p-selfSignedCertificate} -days 1095" />
		</exec>
	</target>

	<target name="04-create-pkcs12-keystore" depends="03-create-self-signed-test-certificate">
		<description>
			Create pkcs12 keystore
		</description>
		<delete file="${p-keystorePKCS12}">
		</delete>
		<echo>
			${p-openssl.exe} pkcs12 -export
			-passout file:${p-passwordsFileKeystorePKCS12} 
			-passin file:${p-passwordsFileKeystorePKCS12} 
			-in	${p-selfSignedCertificate} 
			-inkey ${p-privateKeyRSA}
			-out ${p-keystorePKCS12} 
			-name ${p-alias}
		</echo>
		<exec executable="${p-openssl.exe}">
			<arg line="pkcs12 -export -passout file:${p-passwordsFileKeystorePKCS12} -passin file:${p-passwordsFileKeystorePKCS12} -in ${p-selfSignedCertificate} -inkey ${p-privateKeyRSA} -out ${p-keystorePKCS12} -name ${p-alias}" />
		</exec>
	</target>

	<target name="05-convert-pkcs12-keystore-to-jks-keystore" depends="04-create-pkcs12-keystore">
		<description>
			Convert PKCS12 keystore to JKS
			keystore. The
			generated file
			kimsankeystore is used for SSL in
			Tomcat
			server.xml file for none production environment
			(The Apache
			Tomcat Native library which allows optimal performance in
			production environments was not found on the java.library.path)
		</description>
		<delete file="${p-keystoreJKS}">
		</delete>
		<echo>
			java -classpath	.
			fr.mch.mdo.security.util.PKCS12Import
			${p-keystorePKCS12}
			${p-keystoreJKS}
			${p-passwordsFileKeystorePKCS12}
		</echo>
		<java classpath="." classname="fr.mch.mdo.security.util.PKCS12Import">
			<arg value="${p-keystorePKCS12}" />
			<arg value="${p-keystoreJKS}" />
			<arg value="${p-passwordsFileKeystorePKCS12}" />
		</java>

	</target>


	<target name="test">
	</target>

</project>

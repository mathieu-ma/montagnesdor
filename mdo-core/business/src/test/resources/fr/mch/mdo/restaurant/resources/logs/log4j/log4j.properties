#**********************************************************************************#
#***	Partie I : Param�tres relatifs � Log4j.					***#
#**********************************************************************************#
# Il y a deux sortie de log pour cette configuration. Une sortie vers la console 
# et vers un fichier.
# Pour la syntaxe g�n�rale des propi�t�s bas�es sur la configuration de fichier, voir la
# documenation de org.apache.log4j.PropertyConfigurator.

# Le logger racine utilise les appenders nomm�s A1 et A2. L'application n'utilise pas le niveau "debug".
# Le niveau DEBUG n'est utilisé que pour les tests.
# Le niveau de log le plus bas est le niveau INFO.
# On peut donc dans ce fichier utiliser les niveaux suivants INFO, WARN, ERROR, FATAL.
# Pour changer, ce niveau, il suffit de changer le premier champ du param�tre log4j.rootLogger, par INFO, WARN, ERROR ou FATAL.
log4j.rootLogger= ERROR, A1, A2

log4j.logger.org.hibernate = DEBUG
log4j.logger.org.hibernate.type = DEBUG

log4j.logger.fr.mch.mdo.restaurant.dao.hibernate.MdoHibernateInterceptor = ERROR

# Appender A1 est la sortie de log vers la console.
log4j.appender.A1=org.apache.log4j.ConsoleAppender
# A1 utilise un PatternLayout.
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
# La conversion de pattern est constitu�e d'une date, du niveau de log, du nom de la classe ayant g�n�r� le message de log,
# du fichier java, de la ligne dans le fichier java, de la m�thode, du message de log.
# Exemple de sortie de message : 28 ao�t 2002 11:44:32 FATAL fileextraction.TransferFileToZPNS (TransferFileToZPNS.java:571) putParametresBaseDonnees - Le driver de base de donn�es n'est pas renseign�
log4j.appender.A1.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss} %-5p %-17c{2} (%13F:%L) %3M - %m%n

# La sortie Appender A2 s'�crit dans un fichier.
log4j.appender.A2=org.apache.log4j.FileAppender
# On peut changer le nom du fichier de log en modifiant le param�tre log4j.appender.A2.File.
#log4j.appender.A2.File=F:/montagnesdor/eclipse-workspace/montagnesdorDEV/logs/MyLogger.log
#log4j.appender.A2.File=D:/mdo/MyLogger.log
#log4j.appender.A2.File=${log4j-appender-A2-File}
log4j.appender.A2.File=/home/mathieu/tmp/logs/MyLogger.log
# Par d�faut, le fichier de log sera toujours recr��.
# Mettre le param�tre log4j.appender.A2.Append � true si on veut que tous les logs soient toujours rajout�s � ce fichier.
log4j.appender.A2.Append=true
log4j.appender.A2=org.apache.log4j.RollingFileAppender
log4j.appender.A2.MaxFileSize=500KB
# Keep one backup file
log4j.appender.A2.MaxBackupIndex=2


# Appender A2 utilise un PatternLayout.
# La conversion de pattern est constitu�e d'une date, du niveau de log, du nom de la classe ayant g�n�r� le message de log,
# du fichier java, de la ligne dans le fichier java, de la m�thode, du message de log.
# Exemple de sortie de message : 28 ao�t 2002 11:43:20 INFO  fileextraction.TransferFileToZPNS (TransferFileToZPNS.java:574) putParametresBaseDonnees - Param�tre fileextraction.db.driver oracle.jdbc.driver.OracleDriver
log4j.appender.A2.layout=org.apache.log4j.PatternLayout
log4j.appender.A2.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss} %-5p %-17c{2} (%13F:%L) %3M - %m%n


# La sortie Appender MAIL envoie les logs par mail.
log4j.appender.MAIL=org.apache.log4j.net.SMTPAppender
log4j.appender.MAIL.BufferSize=512
log4j.appender.MAIL.SMTPHost=localhost
log4j.appender.MAIL.From=mathieu.ma@free.fr
log4j.appender.MAIL.To=mathieu.ma@free.fr
log4j.appender.MAIL.threshold=ERROR
log4j.appender.MAIL.layout=org.apache.log4j.PatternLayout
log4j.appender.MAIL.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss} %-5p %-17c{2} (%13F:%L) %3M - %m%n

#**********************************************************************************#

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>client-tools</artifactId>
		<groupId>fr.mch.mdo</groupId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<groupId>fr.mch.mdo</groupId>
	<artifactId>printer-jms</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>printer-jms</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<!-- Properties ${keystorePKCS12}, ${alias}, ${storepass} are in parent	pom file -->
	<build>
		<finalName>PrinterJms</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>initialize-printer-resources</id>
						<phase>initialize</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<echo>
									Remove all files in	${security-generated-files-folder}				
								</echo>
								<delete verbose="true" failonerror="no">
									<fileset dir="${security-generated-files-folder}" />
								</delete>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<!-- Get resource file from security jar -->
						<id>unpack-shared-resources</id>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<outputDirectory>
								src/main/resources
							</outputDirectory>
							<includeGroupIds>${project.groupId}</includeGroupIds>
							<includeArtifacIds>security</includeArtifacIds>
							<excludeArtifactIds>test</excludeArtifactIds>
							<excludeTransitive>false</excludeTransitive>
							<overWriteSnapshots>true</overWriteSnapshots>
							<overWriteReleases>true</overWriteReleases>
							<includes>
								**/mdo-keystore.pkcs12,**/librxtxSerial.so
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>assembly/**</exclude>
								<exclude>generated/**</exclude>
								<exclude>fr/mch/mdo/restaurant/resources/</exclude>
								<exclude>lib/**</exclude>
								<exclude>rxtx/**</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>jar-linux-64-rxtx-library</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<echo>
									Jar Linux 64 bits RXTX Library 
								</echo>
								<jar destfile="${project.build.directory}/linux-64-rxtx-library.jar" basedir="target/classes/rxtx/lib64/linux"
									includes="librxtxSerial.so" />
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2.1</version>
				<configuration>
					<descriptors>
				      <descriptor>src/main/resources/assembly/my-assembly.xml</descriptor>
				    </descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>integration-test</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<id>sign-jar-printer-jms</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<jarPath>${project.build.directory}/${project.build.finalName}-jar-with-dependencies.${project.packaging}</jarPath>
					<type>pkcs12</type>
					<keystore>${keystorePKCS12}</keystore>
					<alias>${alias}</alias>
					<storepass>${storepass}</storepass>
					<signedjar>
						<!-- ${settings.localRepository}/fr/mch/mdo/${project.name}/signed/S${project.build.finalName}.jar -->
						target/signed/S${project.build.finalName}.${project.packaging}
					</signedjar>
					<verify>true</verify>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>sign-jar-linux-64-rxtx-library</id>
						<phase>verify</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<echo>
									Sign Jar Linux 64 bits RXTX Library 
								</echo>
								<mkdir dir="${project.build.directory}/signed" />
								<signjar storetype="pkcs12" alias="${alias}" keystore="${keystorePKCS12}"
									storepass="${storepass}" lazy="true" jar="${project.build.directory}/linux-64-rxtx-library.jar"
									signedjar="${project.build.directory}/signed/Slinux-64-rxtx-library.jar">
								</signjar>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>printer</artifactId>
			<version>1.0-SNAPSHOT</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>client-jms</artifactId>
			<version>1.0-SNAPSHOT</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
